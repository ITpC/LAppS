<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <logicalFolder name="HeaderFiles"
                   displayName="Header Files"
                   projectFiles="true">
      <itemPath>include/Config.h</itemPath>
      <itemPath>include/Env.h</itemPath>
      <itemPath>include/HTTPRequestParser.h</itemPath>
      <itemPath>include/InboundConnectionsPool.h</itemPath>
      <itemPath>include/WSProtocol.h</itemPath>
      <itemPath>include/WSServerMessage.h</itemPath>
      <itemPath>include/WSStreamProcessor.h</itemPath>
      <itemPath>include/WebSocket.h</itemPath>
      <itemPath>include/Worker.h</itemPath>
      <itemPath>include/ePoll.h</itemPath>
      <itemPath>include/ext/json.hpp</itemPath>
      <itemPath>include/wsServer.h</itemPath>
    </logicalFolder>
    <logicalFolder name="ResourceFiles"
                   displayName="Resource Files"
                   projectFiles="true">
    </logicalFolder>
    <logicalFolder name="SourceFiles"
                   displayName="Source Files"
                   projectFiles="true">
      <itemPath>src/getLog.cpp</itemPath>
      <itemPath>src/lookupAppError.cpp</itemPath>
      <itemPath>src/main.cpp</itemPath>
    </logicalFolder>
    <logicalFolder name="TestFiles"
                   displayName="Test Files"
                   projectFiles="false"
                   kind="TEST_LOGICAL_FOLDER">
    </logicalFolder>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
      <itemPath>gpl.txt</itemPath>
    </logicalFolder>
  </logicalFolder>
  <sourceRootList>
    <Elem>src</Elem>
  </sourceRootList>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Debug" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>true</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <ccTool>
          <standard>11</standard>
          <incDir>
            <pElem>../ITCFramework/include</pElem>
            <pElem>../ITCLib/include</pElem>
            <pElem>../utils/include</pElem>
            <pElem>include</pElem>
            <pElem>../libressl/include</pElem>
          </incDir>
          <commandLine>-pipe -Wall -pthread -D_REENTRANT -D_THREAD_SAFE -O3 -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -ftree-vectorize -funroll-loops -DBZ_NO_STDIO -DLOG_DEBUG -DMAX_BUFF_SIZE=256 -DTSAFE_LOG=1 -DLOG_FILE=\"lapps.log\" -DAPP_NAME=\"LAppS\"</commandLine>
        </ccTool>
        <linkerTool>
          <linkerAddLib>
            <pElem>../libressl/lib</pElem>
          </linkerAddLib>
          <linkerLibItems>
            <linkerLibProjectItem>
              <makeArtifact PL="../ITCFramework"
                            CT="3"
                            CN="Debug"
                            AC="true"
                            BL="true"
                            WD="../ITCFramework"
                            BC="${MAKE}  -f Makefile CONF=Debug"
                            CC="${MAKE}  -f Makefile CONF=Debug clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libitcframework.a">
              </makeArtifact>
            </linkerLibProjectItem>
            <linkerLibProjectItem>
              <makeArtifact PL="../ITCLib"
                            CT="3"
                            CN="Debug"
                            AC="true"
                            BL="true"
                            WD="../ITCLib"
                            BC="${MAKE}  -f Makefile CONF=Debug"
                            CC="${MAKE}  -f Makefile CONF=Debug clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libitclib.a">
              </makeArtifact>
            </linkerLibProjectItem>
            <linkerLibProjectItem>
              <makeArtifact PL="../utils"
                            CT="3"
                            CN="Debug"
                            AC="true"
                            BL="true"
                            WD="../utils"
                            BC="${MAKE}  -f utils-Makefile.mk CONF=Debug"
                            CC="${MAKE}  -f utils-Makefile.mk CONF=Debug clean"
                            OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libutils.a">
              </makeArtifact>
            </linkerLibProjectItem>
          </linkerLibItems>
          <commandLine>-lcryptopp -ltls</commandLine>
        </linkerTool>
        <requiredProjects>
          <makeArtifact PL="../utils"
                        CT="3"
                        CN="Debug"
                        AC="true"
                        BL="false"
                        WD="../utils"
                        BC="${MAKE}  -f utils-Makefile.mk CONF=Debug"
                        CC="${MAKE}  -f utils-Makefile.mk CONF=Debug clean"
                        OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libutils.a">
          </makeArtifact>
          <makeArtifact PL="../ITCLib"
                        CT="3"
                        CN="Debug"
                        AC="true"
                        BL="false"
                        WD="../ITCLib"
                        BC="${MAKE}  -f Makefile CONF=Debug"
                        CC="${MAKE}  -f Makefile CONF=Debug clean"
                        OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libitclib.a">
          </makeArtifact>
          <makeArtifact PL="../ITCFramework"
                        CT="3"
                        CN="Debug"
                        AC="true"
                        BL="false"
                        WD="../ITCFramework"
                        BC="${MAKE}  -f Makefile CONF=Debug"
                        CC="${MAKE}  -f Makefile CONF=Debug clean"
                        OP="${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/libitcframework.a">
          </makeArtifact>
        </requiredProjects>
      </compileType>
      <packaging>
        <packType>Debian</packType>
        <packFileList>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
          <packFileListElem type="File"
                            to="${PACKAGE_TOP_DIR}bin/${OUTPUT_BASENAME}"
                            from="${OUTPUT_PATH}"
                            perm="755"
                            owner="root"
                            group="bin"/>
        </packFileList>
        <packInfoList>
          <packInfoListElem name="Package" value="lapps" mandatory="true"/>
          <packInfoListElem name="Version" value="1.0" mandatory="true"/>
          <packInfoListElem name="Architecture" value="amd64" mandatory="false"/>
          <packInfoListElem name="Maintainer" value="pk" mandatory="false"/>
          <packInfoListElem name="Description" value="..." mandatory="false"/>
        </packInfoList>
      </packaging>
      <item path="include/Config.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Env.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/HTTPRequestParser.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/InboundConnectionsPool.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSProtocol.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSServerMessage.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSStreamProcessor.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WebSocket.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Worker.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ePoll.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ext/json.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/wsServer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/getLog.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/lookupAppError.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/main.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
    <conf name="Release" type="1">
      <toolsSet>
        <compilerSet>default</compilerSet>
        <dependencyChecking>true</dependencyChecking>
        <rebuildPropChanged>false</rebuildPropChanged>
      </toolsSet>
      <compileType>
        <cTool>
          <developmentMode>5</developmentMode>
        </cTool>
        <ccTool>
          <developmentMode>5</developmentMode>
        </ccTool>
        <fortranCompilerTool>
          <developmentMode>5</developmentMode>
        </fortranCompilerTool>
        <asmTool>
          <developmentMode>5</developmentMode>
        </asmTool>
      </compileType>
      <item path="include/Config.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Env.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/HTTPRequestParser.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/InboundConnectionsPool.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSProtocol.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSServerMessage.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WSStreamProcessor.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/WebSocket.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/Worker.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ePoll.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/ext/json.hpp" ex="false" tool="3" flavor2="0">
      </item>
      <item path="include/wsServer.h" ex="false" tool="3" flavor2="0">
      </item>
      <item path="src/getLog.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/lookupAppError.cpp" ex="false" tool="1" flavor2="0">
      </item>
      <item path="src/main.cpp" ex="false" tool="1" flavor2="0">
      </item>
    </conf>
  </confs>
</configurationDescriptor>
