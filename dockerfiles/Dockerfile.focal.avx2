FROM ubuntu:focal

LABEL "localhost" "Pavel Kraynyukhov" version 1.0  maintainer "pavel.kraynyukhov@gmail.com" description "LAppS build environment"

RUN apt-get update \
	&& apt-get dist-upgrade -y 

RUN apt-get install -y apt-utils 

RUN apt-get install -y vim 

RUN apt-get install -y curl 

RUN apt-get install -y wget 

RUN apt-get install -y git 

RUN apt-get install -y g++-multilib

RUN apt-get install -y g++-9 --fix-missing

RUN apt-get install -y make

RUN apt-get install -y autotools-dev

RUN apt-get install -y libpam0g-dev

RUN apt-get install -y libbz2-dev

RUN apt-get install -y autoconf

RUN apt-get install -y libtool

RUN apt-get install -y cmake

ENV WORKSPACE /root/workspace

RUN mkdir ${WORKSPACE}

WORKDIR ${WORKSPACE}

RUN git clone https://github.com/microsoft/mimalloc.git

WORKDIR ${WORKSPACE}/mimalloc

RUN env CXXFLAGS="-pipe -O2 -march=native -mtune=native -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops" CFLAGS="-pipe -O2 -march=native -mtune=native -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops" CXX="g++ -pipe -O2 -march=native -mtune=native -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops" cmake .

RUN make -j4 all install

WORKDIR ${WORKSPACE}

ADD http://luajit.org/download/LuaJIT-2.0.5.tar.gz ${WORKSPACE}

WORKDIR ${WORKSPACE}

RUN tar xzvf LuaJIT-2.0.5.tar.gz

WORKDIR ${WORKSPACE}/LuaJIT-2.0.5

RUN env LD_LIBRARY_PATH=/usr/local/lib/mimalloc-1.6/ CFLAGS="-pipe -Wall -pthread -O2 -fPIC -march=native -mtune=native -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops -fstack-check -fstack-protector-strong -fno-omit-frame-pointer" LDFLAGS="-L/usr/local/lib/mimalloc-1.6/ -lmimalloc" make all install

WORKDIR ${WORKSPACE}

ADD https://github.com/wolfSSL/wolfssl/archive/v4.5.0-stable.tar.gz ${WORKSPACE}

RUN ls -la

RUN tar xzvf v4.5.0-stable.tar.gz

WORKDIR ${WORKSPACE}/wolfssl-4.5.0-stable

RUN ./autogen.sh

RUN env LD_LIBRARY_PATH=/usr/local/lib/mimalloc-1.6/ ./configure CFLAGS="-pipe -O2 -march=native -mtune=native -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops -DWOLFSSL_PUBLIC_MP -DTFM_TIMING_RESISTANT -DECC_TIMING_RESISTANT -DWC_RSA_BLINDING" LDFLAGS="-L/usr/local/lib/mimalloc-1.6/ -lmimalloc" --prefix=/usr/local --enable-tls13 --enable-openssh --enable-aesni --enable-intelasm --enable-keygen --enable-certgen --enable-certreq --enable-curve25519 --enable-ed25519 --enable-intelasm --enable-harden --enable-ecc=nonblock --enable-sp=yes,nonblock

RUN env LD_LIBRARY_PATH=/usr/local/lib/mimalloc-1.6/ make all install

WORKDIR ${WORKSPACE}

ADD https://github.com/weidai11/cryptopp/archive/CRYPTOPP_8_2_0.tar.gz ${WORKSPACE}

RUN rm -rf ${WORKSPACE}/cryptopp-CRYPTOPP_8_2_0

RUN tar xzvf ${WORKSPACE}/CRYPTOPP_8_2_0.tar.gz

RUN ls -la

WORKDIR ${WORKSPACE}/cryptopp-CRYPTOPP_8_2_0

RUN make CFLAGS="-pipe -O2 -march=native -mtune=native -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops" CXXFLAGS="-pipe -O2 -march=native -mtune=native -fPIC -fomit-frame-pointer -fstack-check -fstack-protector-strong -mfpmath=sse -msse2avx -mavx2 -ftree-vectorize -funroll-loops" -j4 libcryptopp.a libcryptopp.so

RUN make install


WORKDIR ${WORKSPACE}

RUN rm -rf ITCLib ITCFramework lar utils LAppS

RUN git clone https://github.com/ITpC/ITCLib.git

RUN git clone https://github.com/ITpC/utils.git

RUN git clone https://github.com/ITpC/ITCFramework.git

RUN git clone https://github.com/ITpC/LAppS.git

RUN git clone https://github.com/ITpC/lar.git

WORKDIR ${WORKSPACE}/LAppS

RUN make clean

