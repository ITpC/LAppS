# only location section is here. worker_processes was set to 3 during the test

  location /echo {
      content_by_lua_block
      {
        local server = require "resty.websocket.server"

        local wb, err = server:new{
            timeout = 5000,  -- in milliseconds
            max_payload_len = 65535,
        }
        if not wb then
            ngx.log(ngx.ERR, "failed to new websocket: ", err)
            return ngx.exit(404)
        end

        while true
        do

        local data, typ, err = wb:recv_frame()



        if not data then
          if not string.find(err, "timeout", 1, true) then
            ngx.log(ngx.ERR, "failed to receive a frame: ", err)
            return ngx.exit(444)
          end
        end

        -- ngx.log(ngx.INFO, "received a frame of type ", typ, " and payload ", data)

        if typ == "close" 
        then
          -- for typ "close", err contains the status code
          local code = err

          -- send a close frame back:
          local bytes, err = wb:send_close(1000, "enough, enough!")
          if not bytes then
              ngx.log(ngx.ERR, "failed to send the close frame: ", err)
              return
          end
          ngx.log(ngx.INFO, "closing with status code ", code, " and message ", data)
          return
        end

        if typ == "ping"
        then
          -- send a pong frame back:
          local bytes, err = wb:send_pong(data)
          if not bytes then
            ngx.log(ngx.ERR, "failed to send frame: ", err)
            return
          end
        end

        if(typ =="binary")
        then
          local bytes, err = wb:send_binary(data)
          if err
          then
            ngx.log(ngx.ERR, "failed to send binary frame: ", err)
          end
        end

        if(typ=="text")
        then
          local bytes, err = wb:send_text(data)
          if err
          then
            ngx.log(ngx.ERR, "failed to send text frame: ", err)
          end
        end
      end
    }
  }

